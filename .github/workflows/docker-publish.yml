name: Docker Publish
env: { CONTAINER_PORT: 8888, PRODUCTION_PORT: 8082 }
on:
  workflow_dispatch:
jobs:
  dockerize-and-publish:
    if: github.event.repository.fork == true  # Runs only on forked repos
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Clone the code
        run: echo "Clone the repo {secrets.REPO_NAME} with token = {secrets.REPO_TOKEN}"
      - name: üêü Build production image
        run: |
          docker build -t "${{ secrets.WF_DOCKER_PRODUCTION_IMAGE_NAME }}" . \
          --build-arg PASSWORD="${{ secrets.WF_PASSWORD_PRODUCTION }}" \
          --build-arg SUPABASE_KEY="${{ secrets.WF_SUPABASE_PRODUCTION_KEY }}" \
          --build-arg SUPABASE_URL="${{ secrets.WF_SUPABASE_PRODUCTION_URL }}" \
          --build-arg ASSETS_PATH="${{ secrets.WF_SUPABASE_PRODUCTION_ASSETS_PATH }}" \
          --build-arg BUCKET_NAME="${{ secrets.WF_SUPABASE_PRODUCTION_BUCKET_NAME }}"
      - name: üè° Run production image
        run: docker run -d --name=production -p ${{ env.PRODUCTION_PORT }}:${{ env.CONTAINER_PORT }} ${{ secrets.WF_DOCKER_PRODUCTION_IMAGE_NAME }}
      - name: üí§ Sleep for 5 seconds
        run: sleep 5
      - name: üìù Production Container Logs
        run: docker logs production
      - name: üìû Calling production api
        run: curl http://localhost:${{ env.PRODUCTION_PORT }}
      - name: 1Ô∏è‚É£ Docker production account login
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        env:
          DOCKER_USERNAME: ${{ secrets.WF_DOCKER_PRODUCTION_ACCOUNT_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.WF_DOCKER_PRODUCTION_ACCOUNT_PASSWORD }}
      - name: üå©Ô∏è Push production image to docker hub
        run: docker push ${{ secrets.WF_DOCKER_PRODUCTION_IMAGE_NAME }}
      - name: 1Ô∏è‚É£ Docker production account logout
        run: docker logout
